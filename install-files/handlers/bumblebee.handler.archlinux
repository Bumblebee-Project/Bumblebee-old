#!/bin/sh

# Bumblebee daemon handler script. ArchLinux script to start/stop daemon.

NAME=bumblebee
BIN="$(which $NAME)"
PIDFILE=/var/run/$NAME.pid

start() {
    # Start the daemon only if there is not another instance running
    stat_busy "Checking daemon status"
    "$BIN" --status >/dev/null
    case $? in
      0) ;; # already running
      1) ;; # already running and X is available
      3) ;; # already running, but X server cannot be started
      2) # Can be started
        stat_busy "Starting Bumblebee daemon"
        "$BIN" -d >/dev/null 2>&1 &
        add_daemon $NAME
        ;;
    esac
}

stop() {
    # Stop the daemon only if there is an instance running
    stat_busy "Stopping daemon"
    "$BIN" --status >/dev/null
    case $? in
      0|1|3) # Alive and running
        local pid=$(cat $PIDFILE)
        kill -TERM $pid >/dev/null
        # give it time to end gracefully...
        local retries=10
        while [ $retries -gt 0 ]; do
            retries=$(expr $retries - 1)
            "$BIN" --status >/dev/null
            case $? in
              0|1|3) # not ready
                sleep .5
                ;;
              *) # no need for polling anymore
                break
                ;;
            esac
        done
        # ... otherwhise just terminate it.
        "$BIN" --status >/dev/null
        case $? in
          0|1|3) # still alive > Kill
            kill -KILL $pid >/dev/null
            ;;
          *)
            ;;
        esac
        rm_daemon $NAME
        stat_done
        ;;
      2) # Not started
        stat_fail
        ;;
    esac
}

restart() {
  stop
  sleep 1
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  status)
    # not implemented
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac
