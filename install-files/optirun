#!/bin/bash

### BEGIN LICENSE
#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <davy.renaud@laposte.net> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return Davy Renaud (glyptostroboides)
# ----------------------------------------------------------------------------
#

#    This file is part of bumblebee-ui.
#
#    bumblebee-ui is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    bumblebee-ui is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with bumblebee-ui.  If not, see <http://www.gnu.org/licenses/>.
#
### END LICENSE

# load common library
BUMBLEBEE_LIBDIR=/usr/lib/bumblebee
. "$BUMBLEBEE_LIBDIR/common-functions"

# load settings
. "$BUMBLEBEE_CONFDIR/bumblebee.conf"

show_help_msg() {
    :
}

while :; do
	case "$1" in
	  -f)
		ECO_MODE=0
		echo "The application will be run with Bumblebee even if it's not"
        echo "connected to a power supply (e.g. running on battery)"
		;; #force optirun if on battery
	  -32)
	    echo "Ignoring -32 as optirun automatically detects which libraries should be used"
		;;
	  -c)
		shift
		case "$1" in
		  jpeg|proxy|rgb|yuv|xv)
			VGL_COMPRESS=$1
			echo "Bumblebee will transfer frames using : $VGL_COMPRESS"
			;;
		  *)
			echo "The frame transfer parameter -c must be followed by jpeg, proxy, rgb, yuv or xv."
			exit 3
			;;
		esac
		;;
	  -d)
		shift
		if ! [[ $1 =~ ^:[0-9]+$ ]]; then
			VGL_DISPLAY=$1
			echo "Bumblebee will use the $VGL_DISPLAY display for rendering"
		else
			echo "The display parameter -d must be followed by a colon and digits like :8"
			exit 2
		fi
		;;
      --help)
        show_help_msg
        exit 0
        ;;
	  --)
		# commonly found in parameters, usage: optirun -- -not -recognised -as -param
		shift
		break
		;;
	  -*)
		echo "Unknown parameter: $1"
		exit 255
		;;
	  *)
		# begin of a command, assuming no optirun parameters after this one
		break
		;;
	esac
	# move to the next option in the command
	shift
done

if [[ $0 =~ /optirun(32|64)$ ]]; then
    echo "Running ${0##*/} is deprecated as optirun detects automatically"
    echo "whether the 32-bit or 64-bit libraries should be used. Use optirun instead"
fi

msg_shown=false
show_msg() {
	if ! $msg_shown; then
		echo "Another bumblebee powered application is running, keeping bumblebee alive."
		msg_shown=true
	fi
}

# Launch an application on the nVidia card
optirun_launcher() {
    local bumblebee_script="$(which bumblebee)"
    "$bumblebee_script" --status
    case $? in
      0) # All running just start the application
        ;;
      1) # Start X server then the application
        # THE FIFO IS NOT DEFINED!!!
        BUMBLEBEE_FIFO=$($bumblebee_script --pipe)
        echo start > "$BUMBLEBEE_FIFO"
        ;;
      2) # Daemon not present
        exit 1
        ;;
      3) # Reboot required
        exit 2
        ;;
    esac

    local VGL_DRIVER="$X_LD_LIBRARY_PATH:$LD_LIBRARY_PATH"
    # export settings from configuration file
    export VGL_LOG
    export VGL_READBACK
    vglrun -c "$VGL_COMPRESS" -d "$VGL_DISPLAY" -ld "$VGL_DRIVER" -- "$@"
}

# This maybe needed in the daemon side
# CHECK IF ON BATTERY OR NOT

POWER_STATE=0
for state in /sys/class/power_supply/*/online; do
	POWER_STATE=$(cat "$state")
	break
done

if [ "$POWER_STATE" -eq "1" ] || [ "$ECO_MODE" -eq "0" ]; then
	optirun_launcher $@
elif [ "$POWER_STATE" -eq "0" ]; then
	"$@"
else
	"$@"
fi

