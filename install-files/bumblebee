#!/bin/bash

# We would need some other way to retrieve version number
BUMBLEBEEVER=1.7.10

# Full paths to possible optirun binaries
OPTIRUNS=()
OPTIRUNS[0]=/usr/bin/optirun
OPTIRUNS[1]=/usr/bin/optirun32
OPTIRUNS[2]=/usr/bin/optirun64

# Defaults
BUMBLEBEE_FIFO=/var/run/bumblebee.fifo

# Load settings
. /etc/bumblebee/bumblebee.conf

show_version_msg() {
    cat <<EOF
Bumblebee version $BUMBLEBEEVER

Licenced under GNU GPL v3, "Beer-ware License" and "Red Bull License"
as published by Martin Juhl.

More info at: https://github.com/Bumblebee-Project/Bumblebee
EOF
}

show_help_msg() {
    show_version_msg

    cat <<EOF
Usage:
    bumblebee [OPTIONS]
    OPTIONS
        -d          start bumblebee service as daemon. To start it
                    backgrounded use the handler with 'start' argument.
        --help      show this help message
        --version   show version number
EOF
}

start_x() {
    :
}
stop_x() {
    :
}

start_daemon() {
    if (( EUID != 0 )); then
        echo "Must be run as root"
        return 1
    fi

    # XXX: remove existing file?

    if ! mkfifo --mode=640  "$BUMBLEBEE_FIFO"; then
        echo "Error: Cannot create fifo $BUMBLEBEE_FIFO for communication."
        return 1
    fi

    local command
    local pids
    while :; do
        # this is our "sleep" function, it waits for clients to give commands
        command=$(< "$BUMBLEBEE_FIFO")
        # space-separated list of optirun instances
        pids=$(pidof -x "${OPTIRUNS[@]}")

        if [[ ${command:0:5} == start ]]; then
            # only start if there are actually clients running
            if [ -n "$pids" ]; then
                start_x
            fi
        else
            # allow to quit X if there are no clients running or if the client
            # does not have child programs running. xlsclients did not work :(
            if [ -z "$pids" ] || ! ps --ppid "$pids" > /dev/null; then
                stop_x
            fi
        fi
    done
}

case "$1" in
  --version)
    show_version_msg
    ;;
  --help)
    show_help_msg
    ;;
  -d)
    start_daemon
    ;;
  *)
    show_help_msg
    ;;
esac
