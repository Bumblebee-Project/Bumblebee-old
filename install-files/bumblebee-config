#!/bin/bash

#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <mj@casalogic.dk> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return Martin Juhl
# ----------------------------------------------------------------------------
#

#    This file is part of bumblebee.
#
#    bumblebee is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    bumblebee is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with bumblebee.  If not, see <http://www.gnu.org/licenses/>.
#


ROOT_UID=0

if [ $UID != $ROOT_UID ]; then
    echo "You don't have sufficient privileges to run this script."
    echo
    echo "Please run the script with: sudo bumblebee-bugreport"
    exit 1
fi
  
if [ $HOME = /root ]; then
    echo "Do not run this script as the root user"
    echo
    echo "Please run the script with: sudo bumblebee-bugreport"
    exit 2
fi

ROOT_UID=0

#Determine Arch x86_64 or i686
ARCH=`uname -m`

#Get tools location 
LSPCI=`which lspci` 
MODPROBE=`which modprobe`

if [ `cat /etc/issue |grep -nir fedora |wc -l` -gt 0 ]; then
  DISTRO=FEDORA
  BASHRC=/etc/bashrc
elif [ `cat /etc/issue |grep -nir ubuntu |wc -l` -gt 0 ]; then
  DISTRO=UBUNTU
  BASHRC=/etc/bash.bashrc
elif [ `cat /etc/issue |grep -nir openSUSE |wc -l` -gt 0 ]; then
  DISTRO=OPENSUSE
  BASHRC=/etc/bash.bashrc
elif [ `cat /etc/issue |grep -nir debian |wc -l` -gt 0 ]; then
  DISTRO=DEBIAN
  BASHRC=/etc/bash.bashrc
fi

echo
echo "Bumblebee Configuration."
echo
echo "Do you want to reconfigure bumblebee. (Y/N)" 
echo
read answer

case "$answer" in

 y | Y )
 ;;
 
 *)
  exit 0
 ;;
esac


CURRENTMONITOR=`cat /etc/X11/xorg.conf.nvidia |grep ConnectedMonitor | cut -f4 -d\"`

CONNECTEDMONITOR="UNDEFINED"


while [ "$CONNECTEDMONITOR" = "UNDEFINED" ]; do

echo
echo "Currently the connected monitor is set to: "$CURRENTMONITOR
echo
echo
echo "Select your Laptop:"
echo "1) Alienware M11X"  
echo "2) Dell XPS 15/17"  
echo "3) CLEVO W150HNQ"   
echo "4) Asus EeePC 1215N"
echo "5) Acer Aspire 5745PG/5742G"
echo "6) Dell Vostro 3300"
echo "7) Dell Vostro 3400/3500/3700"
echo "8) Samsung RF511/RF711/QX410-J01"
echo "9) Toshiba Satellite M645-SP4132L"
echo "10) Asus U30J/U31JG/U35J/U43JC/U35JC/U43JC/U53JC/P52JC/K52JC/X52JC/N53SV/N61JV/X64JV"
echo
echo "97) Manually Set Output to CRT-0"
echo "98) Manually Set Output to DFP-0"
echo "99) Manually Enter Output"
echo "0) Leave current configuration"

echo
read machine
echo

case "$machine" in

1)
 CONNECTEDMONITOR="CRT-0"
;;
  
2)
 CONNECTEDMONITOR="CRT-0"
;;
    
3)
 CONNECTEDMONITOR="DFP-0"
;;   
4)
CONNECTEDMONITOR="DFP-0"
;;
  
5)
CONNECTEDMONITOR="DFP-0"
;;
  
6)
CONNECTEDMONITOR="DFP-0"
;;
  
7)
CONNECTEDMONITOR="CRT-0"
;;
  
8)
CONNECTEDMONITOR="CRT-0"
;;
  
9)
CONNECTEDMONITOR="CRT-0"
;;
  
10)
CONNECTEDMONITOR="CRT-0"
;;
  
97)
CONNECTEDMONITOR="CRT-0"
;;
  
98)
CONNECTEDMONITOR="DFP-0"
;;
  
99)
echo
echo "Enter output device for nVidia Card"
echo
read manualinput
CONNECTEDMONITOR=`echo $manualinput`
;;

0)
 CONNECTEDMONITOR=$CURRENTMONITOR
;; 
  
*)
echo
echo "Please choose a valid option, Press any key to try again"
read
clear

;;
  
esac

done


sed -i 's/'$CURRENTMONITOR'/'$CONNECTEDMONITOR'/g' /etc/X11/xorg.conf.nvidia

#if [ `cat $BASHRC |grep VGL |wc -l` -ne 0 ]; then
# cp $BASHRC.optiorig $BASHRC
#fi
 
CURRENTIMAGETRANSPORT=`cat /etc/bash.bashrc |grep VGL_COMPRESS= |cut -f2 -d=`
IMAGETRANSPORT="UNDEFINED"

while [ "$IMAGETRANSPORT" = "UNDEFINED" ]; do

clear

echo
echo "The Image Transport is how the images are transferred from the"
echo "nVidia card to the Intel card, people has different experiences of"
echo "performance, but just select the default if you are in doubt."
echo 
echo "I recently found out that yuv and jpeg both has some lagging"
echo "this is only noticable in fast moving games, such as 1st person"
echo "shooters and for me, its only good enough with xv, even though" 
echo "xv sets down performance a little bit."
echo
echo "Image transport is currently set to: "$CURRENTIMAGETRANSPORT
echo


echo "1) YUV"
echo "2) JPEG"
echo "3) PROXY"
echo "4) XV (default)"
echo "5) RGB"  
echo "6) Leave configuration"

echo
read machine
echo

case "$machine" in

1)
IMAGETRANSPORT="yuv"
;;
  
2)
IMAGETRANSPORT="jpeg"
;;
  
3)
IMAGETRANSPORT="proxy"
;;

4)
IMAGETRANSPORT="xv"
;;
  
5)
IMAGETRANSPORT="rgb"
;;

6)
IMAGETRANSPORT=$CURRENTIMAGETRANSPORT
;;

*)
echo
echo "Please choose a valid option, Press any key to try again."
read
clear
     
;;   
     
esac 
done 

sed -i 's/VGL_COMPRESS='$CURRENTIMAGETRANSPORT'/VGL_COMPRESS='$IMAGETRANSPORT'/g' $BASHRC

echo
echo "Configuration Completed."
echo
