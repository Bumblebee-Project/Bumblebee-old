#!/bin/bash

### BEGIN LICENSE
#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <davy.renaud@laposte.net> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return Davy Renaud (glyptostroboides)
# ----------------------------------------------------------------------------
#

#    This file is part of bumblebee-ui.
#
#    bumblebee-ui is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    bumblebee-ui is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with bumblebee-ui.  If not, see <http://www.gnu.org/licenses/>.
#
### END LICENSE


### COMMENT
#This is a optirun script which takes arguments: compression, architecture, display (just for testing purpose).
#If the force argument is omitted, the script will not launch the app with bumblebee if the computer is on battery
#Usage :
#	optirun -f -32 -c <compression_value> -d <display value>
# -f : Force optirun : force the app to be run with bumblebee if on battery
# -32 : 32Bits library : use the 32bits Nvidia driver (optirun -32 is equivalent to optirun32)
# -c <compression_value> : Compression : -c must be followed by jpeg, proxy, rgb, yuv or xv argument (See the VGL doc)
# -d <display_value> : -d must be followed by :0, :1 or :2 argument (See the VGL doc)
### END COMMENT

#DEFAULT VALUE
source /etc/default/bumblebee
VGL_DRIVER="/usr/lib/nvidia-current"
NVIDIABUSID=`grep BusID /etc/X11/xorg.conf.nvidia | sed -e "s/[ \t]*BusID[ \t]*\"\(.*\)\"/\1/g" |cut -d: -f2,3`

#READ ARGUMENTS
#echo "$*"
while :; do
	case "$1" in
	  -f)
		ECO_MODE='0'
		echo "The application will be run with Bumblebee even if it's not connected to a power supply (e.g. running on battery)"
		;; #force optirun if on battery
	  -32)
		VGL_DRIVER="/usr/lib32/nvidia-current"
		echo "If the application is run with Bumblebee, the 32-bit driver will be used"
		;; #launch vglrun with 32 bits nvidia driver
	  -c)
		shift
		case "$1" in
		  jpeg|proxy|rgb|yuv|xv)
			VGL_COMPRESS=$arg
			echo "Bumblebee will transfer graphics using compression: $VGL_COMPRESS"
			;;
		  *)
			echo "The compression parameter -c must be preceded by jpeg, proxy, rgb, yuv or xv."
			exit 3
			;;
		esac
		;;
	  -d)
		shift
		if ! [[ $1 =~ ^:[0-9]+$ ]]; then
			VGL_DISPLAY=$1
			echo "Bumblebee will use the next display for rendering: $VGL_DISPLAY"
		else
			echo "The display parameter -d must be preceded by a colon followed by digits like :8"
			exit 2
		fi
		;;
	  --)
		# commonly found in parameters, usage: optirun -- -not -recognised -as -param
		break
		;;
	  -*)
		echo "Unknown parameter: $1"
		exit 3
		;;
	  *)
		# begin of a command, assuming no optirun parameters after this one
		break
		;;
	esac
	# move to the next option in the command
	shift
done

#echo "Arguments for the application: $*"
#echo "Eco mode:" $ECO_MODE
#echo "32 bits mode:" $lib32_mode
#echo "Compression mode:" $VGL_COMPRESS
#echo "Display:" $VGL_DISPLAY

# if executed from a symlink named optirun32, use the 32b path if exist
if [ "${0##*/}" = "optirun32" -a -d /usr/lib32/nvidia-current ]; then
	VGL_DRIVER=/usr/lib32/nvidia-current
fi

msg_shown=false
show_msg() {
	if ! $msg_shown; then
		echo "Another bumblebee powered application is running, keeping bumblebee alive."
		msg_shown=true
	fi
}

#OPTIRUN
optirun_launcher() {
	# Remove colon and everything before it: :1.0 -> 1.0
	display=${VGL_DISPLAY##*:}
	# Remove dot and everything after it: 1.0 -> 0
	display=${display%%.*}

	# test if Bumblebee's X server is running
	if [ ! -f /tmp/.X${display}-lock ]; then
		# Bumblebee starts the X server on its own. If it was already running,
		# it still returns 0 so no need for checking if the card is enabled or not
		if ! sudo /etc/init.d/bumblebee enable; then
			echo "bumblebee could not be started - optirun cannot be executed."
			exit 1
		fi
	fi

	trap "echo 'Caught Ctrl+C'" INT

	######MODIFICATION######Comment : source /etc/default/bumblebee

	export VGL_READBACK
	export VGL_LOG
	######MODIFICATION######Replace : /usr/lib/nvidia-current with $VGL_DRIVER
	vglrun -c $VGL_COMPRESS -d $VGL_DISPLAY -ld "$VGL_DRIVER" "$@"

	if [ "$STOP_SERVICE_ON_EXIT" != "NO" ]; then
		OPTIRUNS="/usr/bin/optirun /usr/bin/optirun32 /usr/bin/optirun64"
		while :; do
			# there is a space separating PIDs if multiple optirun instances are running
			if pidof -x $OPTIRUNS | grep -q ' '; then
				show_msg
				exit 0
			elif lsof -n -w /usr/lib*/nvidia-current/libnvidia-glcore.so* >/dev/null; then
				show_msg
				sleep 1
			else
				break
			fi
		done
		if ! lspci -v -s $NVIDIABUSID | grep -q !; then
			sudo /etc/init.d/bumblebee disable
		fi
		# are you sure? disable the card even if X could not be stopped? Needs rethinking
		if ! spci -v -s $NVIDIABUSID | -1 grep !; then
			if [ -x /usr/local/bin/bumblebee-disablecard ]; then
				sudo /usr/local/bin/bumblebee-disablecard
			fi
		fi
	fi

}

#CHECK IF ON BATTERY OR NOT

POWER_STATE=0
for state in /sys/class/power_supply/*/online; do
	POWER_STATE=$(cat "$state")
	break
done

if [ "$POWER_STATE" -eq "1" ] || [ "$ECO_MODE" -eq "0" ]; then
	optirun_launcher $@
elif [ "$POWER_STATE" -eq "0" ]; then
	"$@"
else
	"$@"
fi

