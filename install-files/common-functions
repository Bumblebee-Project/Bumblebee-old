#!/bin/bash
# Bumblebee functions library
# Make sure that this file has NO side effects. It is intended to be sourced
# and should define some functions and variables. Keep it clean, do not
# unnecessarily leak variables (use locals)

# the modprobe binary
MODPROBE="$(which modprobe)"

# retrieve the graphics kernel module to be used for the X server
# Return values:
#   0: a driver is available, the module name is printed
#   1: no driver is available, nothing is printed
get_graphics_driver() {
    local driver
    # currently, it detects which nvidia module can be used. In the future,
    # this function may also use nouveau if it should be used
    for driver in nvidia-current nvidia; do
        if "${MODPROBE}" --dry-run --quiet $driver; then
            echo $driver
            return 0
        fi
    done
    return 1
}

# In the future, {en,dis}able_graphics may handle ACPI calls. Only use
# {,un}load_graphics_driver if the card should not be toggled
enable_graphics() {
    load_graphics_driver
}
disable_graphics() {
    unload_graphics_driver
}

# load the driver, return 1 on failure
load_graphics_driver() {
    "${MODPROBE}" "$(get_graphics_driver)" || return 1
}
# unload the driver, return 1 on failure
unload_graphics_driver() {
    "${MODPROBE}" -r "$(get_graphics_driver)" || return 1
}
