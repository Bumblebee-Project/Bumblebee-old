#!/bin/bash
# Copyright (C) 2011 Bumblebee Project
#
# This file is part of Bumblebee.
#
# Bumblebee is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Bumblebee is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Bumblebee.  If not, see <http://www.gnu.org/licenses/>.

if (( UID != 0 )); then
    echo "You must run this cleanup program as root."
    if which sudo &>/dev/null; then
        echo "That can be done by running:"
        echo "    sudo $0"
    fi
    exit 2
fi

# Do not show * if there is no matching file
shopt -s nullglob

# ok, the old uninstaller is horrible, do not even use it
[ -x /etc/init.d/bumblebee ] && /etc/init.d/bumblebee disable
[ -x /usr/local/bin/bumblebee-enablecard ] && /usr/local/bin/bumblebee-enablecard

# just to be sure...
pcibusid="$(lspci -nn -d10de: | grep '030[02]' | cut -d' ' -f1)"
if lspci -vv -s "$pcibusid" | grep -q '!!!'; then
    echo "WARNING: Your nvidia card is still disabled. I will not continue to"
    echo "prevent damage. Try rebooting the machine and try again."
    echo "If this problem persists, create a new issue at the project page"
    echo "https://github.com/Bumblebee-Project/Bumblebee/issues"
    echo
    echo "Technical details:"
    lspci -vvnn -s "$pcibusid"
    exit 3
fi

# Test if a debian package is installed
dpkg_installed() {
    [[ $(dpkg-query -W -f '${Status}' "$1" 2>/dev/null) == install* ]]
}

# Test if a rpm package is installed
rpm_installed() {
    [[ -n $(rpm -qa $1) ]]
}

# Distro-specific cleanups
if grep -iqE 'ubuntu|linux mint|backtrack linux 5' /etc/issue; then
    echo "Detected distributon: Ubuntu-based"
    if dpkg_installed bumblebee; then
        echo "Old Bumblebee package installation detected, removing..."
        if ! apt-get purge -y bumblebee; then
            echo "The old Bumblebee package could not be removed."
            echo "Installation aborted."
            exit 1
        fi
    fi

    # Bumblebee fails to clean up /etc/rc?.d, we'll do it if necessary
    update-rc.d -f bumblebee remove

    echo "Removing conflicting PPAs if any..."
    # Remove PPA if found to avoid conflicts
    for ppalist in /etc/apt/sources.list.d/mj-casalogic-bumblebee-*.list; do
        rm -vf "$ppalist"
    done

    # On versions before Oneiric with no mesa installation using Multiarch
    if dpkg --compare-versions "$(lsb_release -rs)" le 11.04 &&
        grep -q 'install /etc/ld.so.conf.d/GL.conf' /var/lib/dpkg/info/libgl1-mesa-glx.postinst; then
        echo "Fixing alternatives links if any"
        update-alternatives --remove x86_64-linux-gnu_gl_conf /usr/lib/nvidia-current/ld.so.conf
        update-alternatives --remove i386-linux-gnu_gl_conf /usr/lib/nvidia-current/alt_ld.so.conf
        update-alternatives --remove i386-linux-gnu_gl_conf /usr/lib/nvidia-current/ld.so.conf

        # fix alternatives links and restore /usr/lib/mesa/ld.so.conf
        apt-get install --reinstall -y libgl1-mesa-glx
    fi

    for package in acpi-call-dkms bumblebee-ui nvidia-current virtualgl; do
        if dpkg_installed "$package"; then
            # Rather uninstall than some clean here, we used custom versions not really clean
            apt-get purge -y "$package"
        fi
    done    

    echo "Removing junkfiles if any..."
    for junk in \
        /etc/alternatives/xorg_extra_modules-bumblebee \
        /usr/lib/xorg/x11-extra-modules/xorg \
        /usr/lib/nvidia-current/xorg/xorg \
        /etc/alternatives/_xorg_extra_modules \
        /etc/bash_completion.d/optirun*
    do
        [ -L "$junk" -o -f "$junk" ] && rm -vf "$junk"
    done
elif grep -iq fedora /etc/issue; then
    echo "Detected distribution: Fedora-based"
elif grep -iq opensuse /etc/issue; then
    echo "Detected distribution: OpenSUSE-based"

    # remove start up
    chkconfig bumblebee off 

    echo "Removing VirtualGL package"
    echo
    zypper --no-refresh --non-interactive remove VirtualGL

    if [ -f /usr/bin/nvidia-uninstall ] ; then
        echo "Uninstalling nVidia package."

        if [ -d /usr/X11R6/nvidia ] ; then
            #
            # Cleanup 3D hack for the nVidia package part 1
            #
            ARCH=`uname -m`
            if [ "$ARCH" == "x64_64" ] ; then
                rm -f /usr/lib/libGL.so.*
                rm -f /usr/lib64/libGL.so.*
                mv -f /usr/X11R6/nvidia/lib64/libnvidia-wfb.* /usr/X11R6/nvidia/lib64/xorg/modules 
                pushd /usr/X11R6/nvidia/lib64/xorg/modules > /dev/null
                ln -sf libnvidia-wfb.so.1 libwfb.so
                popd > /dev/null
            else
                rm -f /usr/lib/libGL.so.*
                mv -f /usr/X11R6/nvidia/lib/libnvidia-wfb.* /usr/X11R6/nvidia/lib/xorg/modules
                pushd /usr/X11R6/nvidia/lib/xorg/modules > /dev/null
                ln -sf libnvidia-wfb.so.1 libwfb.so
                popd > /dev/null
            fi
        fi

        #
        # Uninstall nVidia package
        #
        /usr/bin/nvidia-uninstall -s

        if [ -d /usr/X11R6/nvidia ] ; then
            #
            # Cleanup 3D hack part 2
            #
            rm -rf /usr/X11R6/lib-nvidia
            rm -rf /usr/X11R6/lib64-nvidia
            rm -rf /usr/lib/xorg-nvidia
            rm -rf /usr/lib64/xorg-nvidia

            rm -rf /usr/X11R6/nvidia
        fi
    fi

    if rpm_installed bumblebee; then
        echo "Old Bumblebee package installation detected, removing..."
        if ! rpm -e bumblebee; then
            echo "The old Bumblebee package could not be removed."
            echo "Installation aborted."
            exit 1
        fi
    fi

    echo "Removing junkfiles if any..."
    for junk in \
        /etc/bash_completion.d/optirun*
    do
        [ -L "$junk" -o -f "$junk" ] && rm -vf "$junk"
    done
elif grep -iq 'arch linux' /etc/issue; then
    echo "Detected distribution: Arch Linux-based"
elif grep -iq debian /etc/issue; then
    echo "Detected distribution: Debian-based"
elif grep -iq gentoo /etc/issue; then
    echo "Detected distribution: Gentoo-based"
else
    echo "The distribution could not be determined or is unsupported."
    exit 3
fi

# Distro-independent cleanup

echo "Restoring backed up files if any..."
# restore backed up files
for file in \
    /etc/bashrc /etc/bash.bashrc \
    /etc/modprobe.d/blacklist.conf \
    /etc/modules \
    /etc/X11/xorg.conf \
    ; do
    [ -f "${file}.optiorig" ] && mv -v "${file}.optiorig" "$file"
done

echo "Remove distro-independent files if any..."
for junk in \
    /etc/X11/xorg.conf.nvidia \
    /etc/init.d/bumblebee \
    /usr/local/bin/*optirun* \
    /usr/local/bin/bumblebee* \
    /etc/default/bumblebee*
    do
    [ -f "$junk" ] && rm -vf "$junk"
done

echo "Remove distro-independent directories if any..."
for junk_dirs in \
    /usr/share/doc/bumblebee \
    /usr/share/doc/packages/bumblebee
    do
    [ -d "$junk_dirs" ] && rm -rvf "$junk_dirs"
done

# remove /etc/bumblebee only if it's a file containing the version
[ -f /etc/bumblebee ] && rm -f /etc/bumblebee

echo "Done"
