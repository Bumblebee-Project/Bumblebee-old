#!/bin/bash
OVERRIDEAUTODETECT=false
while [ $# -gt 0 ]; do
    case "$1" in
      --force)
        OVERRIDEAUTODETECT=true
        ;;
      --)
        shift
        break
        ;;
      --help)
        echo "This cleaner can be used to correct failures from previous Bumblebee versions."
        echo "Usage: ${0##*/} [options]"
        echo "  --force"
        echo "    Proceed with cleaning up even if the installation does not look ancient"
        echo "  --help"
        echo "    Print this help message"
        ;;
      *)
        echo "Unknown option: $1"
        exit 255
        ;;
    esac
    shift
done
if ! $OVERRIDEAUTODETECT; then
    if [ ! -f "/etc/bumblebee" ]; then
        echo "There is no ancient version to cleanup, to override this, run"
        echo "this program with the --force option. Note: this cleaner can"
        echo "only cleanup versions after 1.4.13 (released March 17th, 2011)."
        exit 1
    fi
fi

if (( UID != 0 )); then
    echo "You must run this cleanup program as root."
    if which sudo &>/dev/null; then
        echo "That can be done by running:"
        echo "    sudo $0"
    fi
    exit 2
fi

# Do not show * if there is no matching file
shopt -s nullglob

# ok, the old uninstaller is horrible, do not even use it
[ -x /etc/init.d/bumblebee ] && /etc/init.d/bumblebee disable
[ -x /usr/local/bin/bumblebee-enablecard ] && /usr/local/bin/bumblebee-enablecard

# Test if a debian package is installed
dpkg_installed() {
    [[ $(dpkg-query -W -f '${Status}' "$1" 2>/dev/null) == install* ]]
}

# Distro-specific cleanups
if grep -iqE 'ubuntu|linux mint|backtrack linux 5' /etc/issue; then
    echo "Detected distributon: Ubuntu-based"
    if dpkg_installed bumblebee; then
        echo "Old Bumblebee package installation detected, removing..."
        if ! apt-get purge -y bumblebee; then
            echo "The old Bumblebee package could not be removed."
            echo "Installation aborted."
            exit 1
        fi
    fi

    # Bumblebee fails to clean up /etc/rc?.d, we'll do it if necessary
    update-rc.d -f bumblebee remove

    echo "Disabling conflicting PPAs if any..."
    # Remove PPA if found to avoid conflicts
    for ppalist in /etc/apt/sources.list.d/mj-casalogic-bumblebee-*.list; do
        rm -vf "$ppalist"
    done

    # On versions before Oneiric
    if dpkg --compare-versions "$(lsb_release -rs)" le 11.04; then
        echo "Fixing alternatives links if any"
        update-alternatives --remove x86_64-linux-gnu_gl_conf /usr/lib/nvidia-current/ld.so.conf
        update-alternatives --remove i386-linux-gnu_gl_conf /usr/lib/nvidia-current/alt_ld.so.conf
        update-alternatives --remove i386-linux-gnu_gl_conf /usr/lib/nvidia-current/ld.so.conf

        if [ -f /usr/lib/mesa/ld.so.conf ]; then
            update-alternatives --force \
                --install /etc/ld.so.conf.d/GL.conf gl_conf /usr/lib/mesa/ld.so.conf 500 \
                --slave /usr/lib/xorg/extra-modules xorg_extra_modules /usr/lib/xorg/x11-extra-modules
        fi

        if dpkg_installed nvidia-current; then
            # upgrade or downgrade to the most recent version from the repos
            if grep -q '^ *--install /etc/ld.so.conf.d/x86_64-linux-gnu_GL.conf ' \
                /var/lib/dpkg/info/nvidia-current.postinst; then
                nvidia_version=$(LANG=C apt-cache policy nvidia-current |\
                    grep '^     [^ ]' | sort | awk '{print $1}' | head -1)
                if [ -n "$nvidia_version" ]; then
                    apt-get install -y "nvidia-current=$nvidia_version"
                else # no version found, perhaps the restricted repo is disabled
                    apt-get remove -y nvidia-current
                fi
            fi
        fi
    fi

    echo "Removing junkfiles if any..."
    for junk in \
        /etc/alternatives/xorg_extra_modules-bumblebee \
        /usr/lib/xorg/x11-extra-modules/xorg \
        /usr/lib/nvidia-current/xorg/xorg \
        /etc/alternatives/_xorg_extra_modules \
        /etc/bash_completion.d/optirun*
    do
        [ -f "$junk" ] && rm -vf "$junk"
    done
elif grep -iq fedora /etc/issue; then
    echo "Detected distribution: Fedora-based"
elif grep -iq opensuse /etc/issue; then
    echo "Detected distribution: OpenSUSE-based"
elif grep -iq 'arch linux' /etc/issue; then
    echo "Detected distribution: Arch Linux-based"
elif grep -iq debian /etc/issue; then
    echo "Detected distribution: Debian-based"
elif grep -iq gentoo /etc/issue; then
    echo "Detected distribution: Gentoo-based"
else
    echo "The distribution could not be determined or is unsupported."
    exit 3
fi

# Distro-independent cleanup

echo "Restoring backed up files if any..."
# restore backed up files
for file in \
    /etc/bashrc /etc/bash.bashrc \
    /etc/modprobe.d/blacklist.conf \
    /etc/modules \
    /etc/X11/xorg.conf \
    ; do
    [ -f "${file}.optiorig" ] && mv -v "${file}.optiorig" "$file"
done

echo "Remove distro-independent files if any..."
for junk in \
    /etc/X11/xorg.conf.nvidia \
    /etc/init.d/bumblebee \
    /usr/local/bin/optirun \
    /usr/local/bin/optirun32 \
    /usr/local/bin/optirun64 \
    /usr/local/bin/bumblebee-disablecard-on-powerup \
    /usr/local/bin/bumblebee* \
    /etc/default/bumblebee*
    do
    [ -f "$junk" ] && rm -vf "$junk"
done

echo "Remove distro-independent directories if any..."
for junk_dirs in \
    /usr/share/doc/bumblebee \
    /usr/share/doc/packages/bumblebee
    do
    [ -d "$junk_dirs" ] && rm -rvf "$junk_dirs"
done

echo "Done"
