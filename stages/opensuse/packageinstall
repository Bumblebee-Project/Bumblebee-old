#
#    Get openSuSE version
#
VERSION=`cat /etc/SuSE-release | grep VERSION | cut -f3 -d" "`

if [ "$VERSION" != "11.3" ] && [ "$VERSION" != "11.4" ] ; then
    while true ; do
        echo
        echo "Sorry, your openSuSE version is not tested yet."
        echo "Bumblebee is only tested on openSuSE 11.3 and 11.4."
        echo "Your installation could get corrupted !!!"
        echo
        echo "Are you sure you want to continue? (y/n)"
        echo
        read opt
        echo

        case "$opt" in
          y)
            echo "You have been warned !!! Press <enter> to continue."
            echo
            read
            echo
            break
            ;;
          n)
            exit 1
            ;;
          *)
            echo
            echo "Please select a valid option, Press <enter> to try again."
            read
            clear
            ;;
        esac
    done
fi

#
#    Determine Arch x86_64 or i686
#
ARCH=`uname -m`

if [ "$ARCH" == "i586" ] || [ "$ARCH" == "i686" ] ; then
    ARCH_NVIDIA="x86"
else
    ARCH_NVIDIA="x86_64"
fi

########################
#
#    Funcs
#

uninstall_nvidia_package() {
    while true ; do
        echo
        echo "Old nVidia package installation detected."
        echo
        echo "Please use the bumblebee-uninstall script to remove this packages if it"
        echo "was installed using the bumblebee install.sh"
        echo "Please remove it by running nvidia-uninstall if you installed it yourself."
        echo
        echo "Or if you are feeling lucky, just select 'y'".
        echo "Remove the old nVidia package ( WARNING X WILL PROBABLY CRASH ) ? (y/n)"
        echo
        read opt
        echo

        case "$opt" in
          y)
            echo "Uninstalling old nVidia package."

            #
            #    Cleanup 3D hack for the nVidia package part 1
            #
            if [ "$ARCH" == "i686" ] ; then
                rm -f /usr/lib/libGL.so.*
                mv -f /usr/X11R6/nvidia/lib/libnvidia-wfb.* /usr/X11R6/nvidia/lib/xorg/modules
                pushd /usr/X11R6/nvidia/lib/xorg/modules > /dev/null
                ln -sf libnvidia-wfb.so.1 libwfb.so
                popd > /dev/null
            else
                rm -f /usr/lib/libGL.so.*
                rm -f /usr/lib64/libGL.so.*
                mv -f /usr/X11R6/nvidia/lib64/libnvidia-wfb.* /usr/X11R6/nvidia/lib64/xorg/modules 
                pushd /usr/X11R6/nvidia/lib64/xorg/modules > /dev/null
                ln -sf libnvidia-wfb.so.1 libwfb.so
                popd > /dev/null
            fi

            #
            #    Uninstall nVidia package
            #
            /usr/bin/nvidia-uninstall -s

            #
            #    Cleanup 3D hack part 2
            #
            rm -rf /usr/X11R6/lib-nvidia
            rm -rf /usr/X11R6/lib64-nvidia
            rm -rf /usr/lib/xorg-nvidia
            rm -rf /usr/lib64/xorg-nvidia

            rm -rf /usr/X11R6/nvidia

            break
            ;;
          n)
            echo "Aborting installation."
            exit 1
            ;;
          *)
            echo
            echo "Please select a valid option, Press <enter> to try again."
            read
            clear
            ;;
        esac
    done
}


########################
#
#    Main
#

#
#    nVidia X server still running ?
#

LOCKFILE=/var/lock/bumblebee

if [ -f $LOCKFILE ] || [ `ps -ef |grep X | grep nvidia | wc -l` -gt 0 ] ; then
    while true ; do
        if [ -f $LOCKFILE ] ; then
            kill -9 `cat $LOCKFILE`
            rm -f $LOCKFILE
        else
            #
            #    Find the pid
            #
            PID_X=`pidof X`

            if [ "`ps p $PID_X | grep nvidia`" != "" ] ; then
                kill -9 $PID_X
            fi
        fi

        #
        #    Wait for the kill
        #
        i=1
        while [ `ps -ef | grep X | grep nvidia | wc -l` -gt 0  ] ; do
            sleep 1
            echo -n "."
            i=$(( i + 1 ))   
            if [ $i -gt 10 ]; then
                echo
                echo "Cannot kill X server"
                break
            fi 
        done

        #
        #    Is the system clean ?
        #
        if [ ! -f $LOCKFILE ] && [ `ps -ef | grep X | grep nvidia | wc -l` -eq 0  ] ; then
            #
            #    Yes, continue
            #
            break
        fi
    done
fi

#
#    Repository installation
#

echo "Using the nVidia repository to install the driver."

#
#    Check for nVidia package install
#

if [ -f /usr/bin/nvidia-uninstall ] ; then
    uninstall_nvidia_package
fi

#
#    Use the online repository
#

ONLINE_REPO=`zypper lr ftp://download.nvidia.com/opensuse/${VERSION} 2>/dev/null | grep Cache`
OFFLINE_REPO=`zypper lr "nVidia Graphics Drivers (local mirror)" 2>/dev/null | grep Cache`

if [ "$OFFLINE_REPO" != "" ] ; then
    #
    #    Remove local mirror repository
    #
    echo "Removing mirror repository reference."

    zypper rr "nVidia Graphics Drivers (local mirror)" >/dev/null 2>&1 
fi

if [ "$ONLINE_REPO" == "" ] ; then
    #
    #    Adding offline repo
    #
    echo "Adding online repository reference."

    zypper ar -f ftp://download.nvidia.com/opensuse/${VERSION} "nVidia Graphics Drivers"
fi

if [ $? -ne 0 ] ; then
    echo
    echo "Package manager failed to install needed repository..."
    echo
    exit 21
    fi
    zypper update
fi

KERNEL_TYPE=`uname -r | cut -f3 -d"-"`

#
#    Assuming that they are no computer with Optimus and GF < 6
#

zypper install nvidia-gfxG02-kmp-$KERNEL_TYPE
zypper install x11-video-nvidiaG02

#
#    Full 3D hack for the repository
#
if [ "$ARCH" == "i686" ] ; then
    if [ `ls /usr/X11R6/lib/libGL.* 2> /dev/null | wc -l` -gt 0 ] ; then
        #
        #    Move conflicting NVidia libraries to a safer place.
        #
        rm -rf /usr/X11R6/lib-nvidia
        mkdir -p /usr/X11R6/lib-nvidia
        mv -f /usr/X11R6/lib/libGL.* /usr/X11R6/lib-nvidia/
        mv -f /usr/X11R6/lib/libXvMCNVIDIA* /usr/X11R6/lib-nvidia/
    fi
    if [ -f /usr/lib/xorg/modules/updates/drivers/nvidia_drv.so ] ; then
        #
        #    Move NVidia xorg modules to a safer place
        #
        rm -rf /usr/lib/xorg-nvidia
        cp -a /usr/lib/xorg /usr/lib/xorg-nvidia
        rm -f /usr/lib/xorg/modules/updates/drivers/nvidia_drv.so
        rm -f /usr/lib/xorg/modules/updates/extensions/libglx.*
    fi
else
    if [ `ls /usr/X11R6/lib/libGL.* 2> /dev/null | wc -l` -gt 0 ] ; then
        #
        #    Move conflicting i686 NVidia libraries to a safer place.
        #
        rm -rf /usr/X11R6/lib-nvidia
        mkdir -p /usr/X11R6/lib-nvidia
        mv -f /usr/X11R6/lib/libGL.* /usr/X11R6/lib-nvidia/
    fi
    if [ `ls /usr/X11R6/lib64/libGL.* 2> /dev/null | wc -l` -gt 0 ] ; then
        #
        #    Move conflicting x86_64 NVidia libraries to a safer place.
        #
        rm -rf /usr/X11R6/lib64-nvidia
        mkdir -p /usr/X11R6/lib64-nvidia
        mv -f /usr/X11R6/lib64/libGL.* /usr/X11R6/lib64-nvidia/
        mv -f /usr/X11R6/lib64/libXvMCNVIDIA* /usr/X11R6/lib64-nvidia/
    fi
    if [ -f /usr/lib64/xorg/modules/updates/drivers/nvidia_drv.so ] ; then
        #
        #    Move NVidia xorg modules to a safer place
        #
        rm -rf /usr/lib64/xorg-nvidia
        cp -a /usr/lib64/xorg /usr/lib64/xorg-nvidia
        rm -f /usr/lib64/xorg/modules/updates/drivers/nvidia_drv.so
        rm -f /usr/lib64/xorg/modules/updates/extensions/libglx.*
    fi
fi

INSTALLED=`zypper --no-refresh info newt | grep Installed: | cut -f2 -d' '`
if [ "$INSTALLED" != "Yes" ] ; then
    echo "Do you want me to install the newt package"
    echo "needed for the bumblebee-configuration script (y/n) ?"
    read answer
    case "$answer" in
      y|Y)
        if [ "$INSTALLED" != "Yes" ] ; then
            zypper install newt
            if [ $? -ne 0 ]; then
                echo
                echo "Package manager failed to install needed package..."
                echo
                exit 21
            fi
        fi
        ;;
      n|N)
        echo "Packages will NOT be installed."
        ;;
      *)
        ;;
    esac
fi
